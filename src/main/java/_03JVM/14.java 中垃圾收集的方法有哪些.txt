14.java 中垃圾收集的方法有哪些?
1.  标记-清除
这是垃圾收集算法中最基础的，根据名字就可以知道，它的思想就是标记哪些要被回
收的对象，然后统一回收。这种方法很简单，但是会有两个主要问题：1.效率不高，
标记和清除的效率都很低；2.会产生大量不连续的内存碎片，导致以后程序在分配较
大的对象时，由于没有充足的连续内存而提前触发一次 GC 动作。
2.  复制算法:
为了解决效率问题，复制算法将可用内存按容量划分为相等的两部分，然后每次只使
用其中的一块，当一块内存用完时，就将还存活的对象复制到第二块内存上，然后一
次性清楚完第一块内存，再将第二块上的对象复制到第一块。但是这种方式，内存的
代价太高，每次基本上都要浪费一般的内存。
于是将该算法进行了改进，内存区域不再是按照 1：1 去划分，而是将内存划分为
8:1:1 三部分，较大那份内存交 Eden 区，其余是两块较小的内存区叫 Survior
区。每次都 会优先使用 Eden 区，若 Eden 区满，就将对象复制到第二块内存区上，
然后清除 Eden 区，如果此时存活的对象太多，以至于 Survivor 不够时，
会将这些对象通过分配担 保机制复制到老年代中。(java 堆又分为新生代和老年代)

3.  标记-整理

该算法主要是为了解决标记-清除，产生大量内存碎片的问题；当对象存活率较高时，
也解决了复制算法的效率问题。它的不同之处就是在清除对象的时候现将可回收对象
移动到一端，然后清除掉端边界以外的对象，这样就不会产生内存碎片了。

4. 分代收集 现在的虚拟机垃圾收集大多采用这种方式，它根据对象的生存周期，
将堆分为新生代 和老年代。在新生代中，由于对象生存期短，每次回收都会有大量对象死去，
那么这 时就采用复制算法。老年代里的对象存活率较高，没有额外的空间进行分配担保，所
以可以使用标记-整理 或者 标记-清除。