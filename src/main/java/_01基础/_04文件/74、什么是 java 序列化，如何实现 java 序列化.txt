74、什么是 java 序列化，如何实现 java 序列化？或者请解释 Serializable 接口的作用。

我们有时候将一个 java 对象变成字节流的形式传出去或者从一个字节流中恢复成一个 java
对象，例如，要将 java 对象存储到硬盘或者传送给网络上的其他计算机，这个过程我们可
以自己写代码去把一个 java 对象变成某个格式的字节流再传输，但是，jre 本身就提供了这
种支持，我们可以调用 OutputStream 的 writeObject 方法来做，如果要让 java 帮我们做，
要被传输的对象必须实现 serializable 接口，这样，javac 编译时就会进行特殊处理，编译
的类才可以被 writeObject 方法操作，这就是所谓的序列化。需要被序列化的类必须实现
Serializable 接口，该接口是一个 mini 接口，其中没有需要实现的方法，
implementsSerializable 只是为了标注该对象是可被序列化的。


任何类型只要实现了 Serializable 接口，就可以被保存到文件中，或者作为数据流通过网络发送到别的地方。也可以用管道来传输到系统的其他程序中。这样子极大的简化了
类的设计。只要设计一个保存一个读取功能就能解决上面说得所有问题。
实现 serializable 接口的作用是就是可以把对象存到字节流，然后可以恢复！
所以你想如果你的对象没实现序列化怎么才能进行网络传输呢 ,要网络传输就得转为字节流 ,所以在分布式应用中 ,你就得实现序列化 ,如果你不需要分布式应用 ,那就没那个必
要实现序列化


序列化:
处理对象流的机制，所谓对象流也就是将对象的内容进行流化。可以对流化后的对象进行读写操作，也可将流化后的对象传输于网络之间。序列化是为了解决在对对象流进行读写操作时所引发的问题。
序列化的实现：
将需要被序列化的类实现Serializable接口，该接口没有需要实现的方法，implements Serializable只是为了标注该对象是可被序列化的，然后使用一个输出流(如：FileOutputStream)来构造一个ObjectOutputStream(对象流)对象，接着，使用ObjectOutputStream对象的writeObject(Object obj)方法就可以将参数为obj的对象写出(即保存其状态)，要恢复的话则用输入流。