1、多线程有什么用？

一个可能在很多人看来很扯淡的一个问题：我会用多线程就好了，还管它有什 么用？在我看来，这个回答更扯淡。所谓"知其然知其所以然"，"会用"只是" 知其然"，"为什么用"才是"知其所以然"，只有达到"知其然知其所以然"的程度 才可以说是把一个知识点运用自如。OK，下面说说我对这个问题的看法：
1）发挥多核 CPU 的优势
随着工业的进步，现在的笔记本、台式机乃至商用的应用服务器至少也都是双 核的，4 核、8 核甚至 16 核的也都不少见，如果是单线程的程序，那么在双 核 CPU 上就浪费了 50%，在 4 核 CPU 上就浪费了 75%。单核 CPU 上所谓 的"多线程"那是假的多线程，同一时间处理器只会处理一段逻辑，只不过线 程之间切换得比较快，看着像多个线程"同时"运行罢了。多核 CPU 上的多线 程才是真正的多线程，它能让你的多段逻辑同时工作，多线程，可以真正发挥 出多核 CPU 的优势来，达到充分利用 CPU 的目的。
2）防止阻塞
从程序运行效率的角度来看，单核 CPU 不但不会发挥出多线程的优势，反而 会因为在单核 CPU 上运行多线程导致线程上下文的切换，而降低程序整体的 效率。但是单核 CPU 我们还是要应用多线程，就是为了防止阻塞。试想，如 果单核 CPU 使用单线程，那么只要这个线程阻塞了，比方说远程读取某个数 据吧，对端迟迟未返回又没有设置超时时间，那么你的整个程序在数据返回回 来之前就停止运行了。多线程可以防止这个问题，多条线程同时运行，哪怕一 条线程的代码执行读取数据阻塞，也不会影响其它任务的执行。

3）便于建模
这是另外一个没有这么明显的优点了。假设有一个大的任务 A，单线程编程， 那么就要考虑很多，建立整个程序模型比较麻烦。但是如果把这个大的任务 A 分解成几个小任务，任务 B、任务 C、任务 D，分别建立程序模型，并通过多 线程分别运行这几个任务，那就简单很多了。