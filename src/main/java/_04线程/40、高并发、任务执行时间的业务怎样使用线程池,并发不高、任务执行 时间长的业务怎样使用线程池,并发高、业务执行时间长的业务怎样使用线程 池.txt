40、高并发、任务执行时间短的业务怎样使用线程池？并发不高、任务执行 时间长的业务怎样使用线程池？并发高、业务执行时间长的业务怎样使用线程 池？
这是我在并发编程网上看到的一个问题，把这个问题放在最后一个，希望每个 人都能看到并且思考一下，因为这个问题非常好、非常实际、非常专业。关于 这个问题，个人看法是： 1）高并发、任务执行时间短的业务，线程池线程数可以设置为 CPU 核数+1， 减少线程上下文的切换
2）并发不高、任务执行时间长的业务要区分开看： a）假如是业务时间长集中在 IO 操作上，也就是 IO 密集型的任务，因为 IO 操作并不占用 CPU，所以不要让所有的 CPU 闲下来，可以加大线程池中的线 程数目，让 CPU 处理更多的业务 b）假如是业务时间长集中在计算操作上，也就是计算密集型任务，这个就没 办法了，和（1）一样吧，线程池中的线程数设置得少一些，减少线程上下文 的切换 c）并发高、业务执行时间长，解决这种类型任务的关键不在于线程池而在于 整体架构的设计，看看这些业务里面某些数据是否能做缓存是第一步，增加服 务器是第二步，至于线程池的设置，设置参考其他有关线程池的文章。最后， 业务执行时间长的问题，也可能需要分析一下，看看能不能使用中间件对任务 进行拆分和解耦。
